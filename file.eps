<<<<<<< HEAD
%!PS-Adobe-2.0 EPSF-2.0
%%Title: file.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Wed Dec  2 09:49:25 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
=======
%!PS-Adobe-3.0 EPSF-3.0
%%Title: glps_renderer figure
%%Creator: GL2PS 1.3.8, (C) 1999-2012 C. Geuzaine
%%For: Octave
%%CreationDate: Wed Dec  2 10:49:39 2015
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%BoundingBox: 0 0 1535 836
>>>>>>> 78b19c2afd9ae68c03200637849334dbaadbe970
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (file.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (shigeyamajoutarou)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec  2 09:49:25 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
<<<<<<< HEAD
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 780 400 10378 7998 BoxColFill
0.500 UL
LTb
780 400 M
88 0 V
10291 0 R
-88 0 V
stroke
660 400 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
780 2400 M
88 0 V
10291 0 R
-88 0 V
stroke
660 2400 M
[ [({}) 200.0 0.0 true true 0 (500)]
] -66.7 MRshow
0.500 UL
LTb
780 4400 M
88 0 V
10291 0 R
-88 0 V
stroke
660 4400 M
[ [({}) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
0.500 UL
LTb
780 6399 M
88 0 V
10291 0 R
-88 0 V
stroke
660 6399 M
[ [({}) 200.0 0.0 true true 0 (1500)]
] -66.7 MRshow
0.500 UL
LTb
780 8399 M
88 0 V
10291 0 R
-88 0 V
stroke
660 8399 M
[ [({}) 200.0 0.0 true true 0 (2000)]
] -66.7 MRshow
0.500 UL
LTb
780 400 M
0 88 V
0 7911 R
0 -88 V
stroke
780 200 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
2856 400 M
0 88 V
0 7911 R
0 -88 V
stroke
2856 200 M
[ [({}) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
0.500 UL
LTb
4932 400 M
0 88 V
0 7911 R
0 -88 V
stroke
4932 200 M
[ [({}) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
0.500 UL
LTb
7007 400 M
0 88 V
0 7911 R
0 -88 V
stroke
7007 200 M
[ [({}) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
0.500 UL
LTb
9083 400 M
0 88 V
0 7911 R
0 -88 V
stroke
9083 200 M
[ [({}) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
0.500 UL
LTb
11159 400 M
0 88 V
0 7911 R
0 -88 V
stroke
11159 200 M
[ [({}) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 8399 N
780 400 L
10379 0 V
0 7999 V
780 8399 L
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
3.000 UL
LT0
1818 7299 M
2025 5007 L
208 -440 V
208 -819 V
207 1375 V
2856 2416 L
207 2339 V
3271 3256 L
208 -904 V
207 -80 V
208 412 V
207 -924 V
208 -140 V
207 212 V
208 -236 V
208 240 V
207 152 V
208 -264 V
207 -284 V
208 324 V
208 -168 V
207 -84 V
208 -68 V
207 -164 V
208 148 V
207 -48 V
208 100 V
208 24 V
207 -244 V
208 148 V
207 -76 V
208 60 V
207 -64 V
208 40 V
208 -84 V
207 -64 V
208 -76 V
207 128 V
208 -160 V
208 36 V
207 72 V
208 -72 V
207 124 V
208 -140 V
207 96 V
% End plot #1
1.000 UP
stroke
0.500 UL
LTb
grestore % colour palette end
stroke
=======
1.0 1.0 scale
1 1 1 C
1389.17 91.96 1389.17 773.3 1389.17 91.96 T
1389.17 91.96 1389.17 773.3 1389.17 773.3 T
199.55 773.3 1389.17 773.3 199.55 773.3 T
199.55 773.3 1389.17 773.3 1389.17 773.3 T
199.55 773.3 1389.17 91.96 199.55 91.96 T
199.55 773.3 1389.17 773.3 1389.17 91.96 T
0.5 W
[16 0] 0 setdash
0 0 0 C
199.55 91.96 LS
1389.17 91.96 LE
199.55 773.3 LS
1389.17 773.3 LE
199.55 773.3 LS
1389.17 773.3 LE
199.55 91.96 LS
1389.17 91.96 LE
199.55 91.96 LS
199.55 773.3 LE
1389.17 91.96 LS
1389.17 773.3 LE
1389.17 91.96 LS
1389.17 773.3 LE
199.55 91.96 LS
199.55 773.3 L
199.55 773.3 LE
1389.17 773.3 LS
1389.17 773.3 LE
1389.17 91.96 LS
1389.17 91.96 LE
199.55 91.96 LS
199.55 91.96 L
199.55 103.862 LE
199.55 773.3 LS
199.55 761.398 LE
437.475 91.96 LS
437.475 103.862 LE
437.475 773.3 LS
437.475 761.398 LE
675.4 91.96 LS
675.4 103.862 LE
675.4 773.3 LS
675.4 761.398 LE
913.325 91.96 LS
913.325 103.862 LE
913.325 773.3 LS
913.325 761.398 LE
1151.25 91.96 LS
1151.25 103.862 LE
1151.25 773.3 LS
1151.25 761.398 LE
1389.17 91.96 LS
1389.17 103.862 LE
1389.17 773.3 LS
1389.17 761.398 LE
(0) 199.55 86.9575 10 /Helvetica STC
(10) 437.475 86.9575 10 /Helvetica STC
(20) 675.4 86.9575 10 /Helvetica STC
(30) 913.325 86.9575 10 /Helvetica STC
(40) 1151.25 86.9575 10 /Helvetica STC
(50) 1389.17 86.9575 10 /Helvetica STC
199.55 91.96 LS
211.443 91.96 LE
1389.17 91.96 LS
1377.28 91.96 LE
199.55 189.294 LS
211.443 189.294 LE
1389.17 189.294 LS
1377.28 189.294 LE
199.55 286.629 LS
211.443 286.629 LE
1389.17 286.629 LS
1377.28 286.629 LE
199.55 383.963 LS
211.443 383.963 LE
1389.17 383.963 LS
1377.28 383.963 LE
199.55 481.297 LS
211.443 481.297 LE
1389.17 481.297 LS
1377.28 481.297 LE
199.55 578.631 LS
211.443 578.631 LE
1389.17 578.631 LS
1377.28 578.631 LE
199.55 675.966 LS
211.443 675.966 LE
1389.17 675.966 LS
1377.28 675.966 LE
199.55 773.3 LS
211.443 773.3 LE
1389.17 773.3 LS
1377.28 773.3 LE
(0) 194.552 91.96 10 /Helvetica SCR
(500) 194.552 189.294 10 /Helvetica SCR
(1000) 194.552 286.629 10 /Helvetica SCR
(1500) 194.552 383.963 10 /Helvetica SCR
(2000) 194.552 481.297 10 /Helvetica SCR
(2500) 194.552 578.631 10 /Helvetica SCR
(3000) 194.552 675.966 10 /Helvetica SCR
(3500) 194.552 773.3 10 /Helvetica SCR
3 W
[] 0 setdash
0.3 0.3 0.3 C
318.512 463.777 LS
342.305 445.673 L
366.098 309.794 L
389.89 265.994 L
413.682 229.785 L
437.475 194.356 L
461.267 203.505 L
485.06 205.257 L
508.852 200.196 L
532.645 194.745 L
556.438 220.247 L
580.23 175.862 L
604.022 178.198 L
627.815 167.491 L
651.607 208.956 L
675.4 154.643 L
699.192 164.182 L
722.985 146.857 L
746.777 152.891 L
770.57 151.918 L
794.362 171.385 L
818.155 156.979 L
841.947 149.387 L
865.74 144.715 L
889.532 153.67 L
913.325 148.025 L
937.117 147.83 L
960.91 153.67 L
984.702 155.811 L
1008.49 153.086 L
1032.29 158.147 L
1056.08 143.547 L
1079.87 145.299 L
1103.66 144.715 L
1127.46 140.432 L
1151.25 144.131 L
1175.04 150.555 L
1198.83 142.769 L
1222.63 145.689 L
1246.42 143.937 L
1270.21 149.777 L
1294 147.635 L
1317.8 147.635 L
1341.59 142.379 L
1365.38 141.406 LE
0.27 0.27 0.27 C
318.512 560.722 LS
342.305 271.834 L
366.098 337.242 L
389.89 238.935 L
413.682 246.332 L
437.475 251.199 L
461.267 203.894 L
485.06 199.612 L
508.852 196.497 L
532.645 164.377 L
556.438 175.473 L
580.23 189.294 L
604.022 173.137 L
627.815 170.606 L
651.607 155.033 L
675.4 158.731 L
699.192 159.315 L
722.985 160.094 L
746.777 146.467 L
770.57 149.193 L
794.362 147.051 L
818.155 143.937 L
841.947 142.574 L
865.74 141.795 L
889.532 141.016 L
913.325 141.6 L
937.117 140.238 L
960.91 144.131 L
984.702 152.502 L
1008.49 144.326 L
1032.29 132.84 L
1056.08 134.592 L
1079.87 136.15 L
1103.66 134.982 L
1127.46 136.928 L
1151.25 134.592 L
1175.04 140.043 L
1198.83 128.558 L
1222.63 122.912 L
1246.42 131.867 L
1270.21 134.398 L
1294 127.779 L
1317.8 135.955 L
1341.59 130.894 L
1365.38 127.779 LE
0.24 0.24 0.24 C
318.512 443.142 LS
342.305 498.428 L
366.098 261.516 L
389.89 291.495 L
413.682 187.542 L
437.475 190.462 L
461.267 199.222 L
485.06 212.655 L
508.852 185.012 L
532.645 180.34 L
556.438 151.139 L
580.23 187.932 L
604.022 165.739 L
627.815 149.971 L
651.607 148.998 L
675.4 146.662 L
699.192 154.643 L
722.985 140.822 L
746.777 134.982 L
770.57 152.891 L
794.362 144.326 L
818.155 139.264 L
841.947 130.699 L
865.74 140.822 L
889.532 133.424 L
913.325 138.096 L
937.117 132.451 L
960.91 140.627 L
984.702 136.539 L
1008.49 143.353 L
1032.29 133.814 L
1056.08 123.886 L
1079.87 134.203 L
1103.66 132.84 L
1127.46 123.886 L
1151.25 130.894 L
1175.04 125.832 L
1198.83 134.982 L
1222.63 135.176 L
1246.42 119.992 L
1270.21 127.584 L
1294 129.142 L
1317.8 132.256 L
1341.59 121.355 L
1365.38 122.718 LE
0.21 0.21 0.21 C
318.512 676.16 LS
342.305 309.21 L
366.098 302.981 L
389.89 310.767 L
413.682 199.612 L
437.475 189.684 L
461.267 200.78 L
485.06 156.59 L
508.852 175.862 L
532.645 158.537 L
556.438 184.038 L
580.23 181.313 L
604.022 143.353 L
627.815 148.025 L
651.607 170.606 L
675.4 137.707 L
699.192 153.475 L
722.985 140.238 L
746.777 144.91 L
770.57 150.555 L
794.362 133.424 L
818.155 137.512 L
841.947 130.699 L
865.74 122.718 L
889.532 122.912 L
913.325 130.115 L
937.117 128.363 L
960.91 137.123 L
984.702 133.424 L
1008.49 130.115 L
1032.29 126.222 L
1056.08 127.584 L
1079.87 132.256 L
1103.66 132.062 L
1127.46 130.504 L
1151.25 127.195 L
1175.04 132.062 L
1198.83 120.187 L
1222.63 128.168 L
1246.42 129.92 L
1270.21 131.867 L
1294 123.496 L
1317.8 120.187 L
1341.59 121.55 L
1365.38 126.806 LE
0.18 0.18 0.18 C
318.512 676.16 LS
342.305 374.035 L
366.098 276.311 L
389.89 221.804 L
413.682 202.337 L
437.475 170.995 L
461.267 209.54 L
485.06 175.083 L
508.852 165.35 L
532.645 163.014 L
556.438 159.51 L
580.23 137.318 L
604.022 138.68 L
627.815 142.574 L
651.607 158.926 L
675.4 127.39 L
699.192 138.096 L
722.985 153.67 L
746.777 148.025 L
770.57 145.494 L
794.362 128.947 L
818.155 130.504 L
841.947 140.822 L
865.74 138.486 L
889.532 139.654 L
913.325 138.096 L
937.117 130.31 L
960.91 127 L
984.702 130.115 L
1008.49 126.611 L
1032.29 125.638 L
1056.08 130.504 L
1079.87 122.718 L
1103.66 126.806 L
1127.46 129.336 L
1151.25 135.176 L
1175.04 128.752 L
1198.83 122.718 L
1222.63 118.63 L
1246.42 121.16 L
1270.21 129.726 L
1294 123.496 L
1317.8 117.072 L
1341.59 124.275 L
1365.38 121.16 LE
0.15 0.15 0.15 C
318.512 562.279 LS
342.305 676.16 L
366.098 254.314 L
389.89 676.16 L
413.682 242.049 L
437.475 357.488 L
461.267 188.321 L
485.06 179.95 L
508.852 159.51 L
532.645 165.155 L
556.438 146.857 L
580.23 164.571 L
604.022 136.734 L
627.815 148.609 L
651.607 151.723 L
675.4 145.689 L
699.192 134.008 L
722.985 137.123 L
746.777 152.502 L
770.57 141.406 L
794.362 138.096 L
818.155 127.195 L
841.947 129.726 L
865.74 120.771 L
889.532 126.222 L
913.325 134.787 L
937.117 128.558 L
960.91 131.088 L
984.702 125.832 L
1008.49 122.328 L
1032.29 125.248 L
1056.08 127 L
1079.87 127.39 L
1103.66 123.496 L
1127.46 133.424 L
1151.25 120.966 L
1175.04 129.92 L
1198.83 132.256 L
1222.63 129.92 L
1246.42 124.47 L
1270.21 109.87 L
1294 121.55 L
1317.8 120.771 L
1341.59 122.912 L
1365.38 120.187 LE
0.12 0.12 0.12 C
318.512 563.253 LS
342.305 549.237 L
366.098 630.024 L
389.89 299.477 L
413.682 223.751 L
437.475 186.958 L
461.267 182.676 L
485.06 230.564 L
508.852 178.004 L
532.645 170.606 L
556.438 191.046 L
580.23 163.209 L
604.022 131.478 L
627.815 151.529 L
651.607 146.467 L
675.4 154.643 L
699.192 141.406 L
722.985 142.574 L
746.777 130.504 L
770.57 142.379 L
794.362 138.68 L
818.155 130.31 L
841.947 131.867 L
865.74 136.734 L
889.532 144.326 L
913.325 126.806 L
937.117 132.646 L
960.91 124.47 L
984.702 131.867 L
1008.49 135.371 L
1032.29 134.982 L
1056.08 126.222 L
1079.87 134.008 L
1103.66 135.566 L
1127.46 145.689 L
1151.25 132.062 L
1175.04 119.019 L
1198.83 129.531 L
1222.63 127.584 L
1246.42 136.734 L
1270.21 122.134 L
1294 121.744 L
1317.8 122.718 L
1341.59 126.222 L
1365.38 127.39 LE
0.09 0.09 0.09 C
318.512 676.16 LS
342.305 676.16 L
366.098 676.16 L
389.89 676.16 L
413.682 247.695 L
437.475 406.155 L
461.267 289.549 L
485.06 415.694 L
508.852 206.036 L
532.645 245.748 L
556.438 197.081 L
580.23 196.886 L
604.022 181.897 L
627.815 148.219 L
651.607 191.046 L
675.4 184.233 L
699.192 166.323 L
722.985 155.422 L
746.777 144.326 L
770.57 156.201 L
794.362 155.617 L
818.155 167.491 L
841.947 155.227 L
865.74 136.539 L
889.532 161.651 L
913.325 136.928 L
937.117 139.459 L
960.91 145.883 L
984.702 146.662 L
1008.49 146.078 L
1032.29 132.062 L
1056.08 143.547 L
1079.87 137.512 L
1103.66 132.062 L
1127.46 134.008 L
1151.25 133.23 L
1175.04 127 L
1198.83 135.955 L
1222.63 140.822 L
1246.42 136.928 L
1270.21 129.336 L
1294 132.062 L
1317.8 135.76 L
1341.59 126.611 L
1365.38 131.088 LE
0.06 0.06 0.06 C
318.512 676.16 LS
342.305 676.16 L
366.098 676.16 L
389.89 561.306 L
413.682 676.16 L
437.475 676.16 L
461.267 626.909 L
485.06 676.16 L
508.852 436.718 L
532.645 360.408 L
556.438 286.239 L
580.23 346.392 L
604.022 260.348 L
627.815 338.8 L
651.607 235.431 L
675.4 243.412 L
699.192 235.431 L
722.985 220.441 L
746.777 191.825 L
770.57 194.745 L
794.362 205.841 L
818.155 206.23 L
841.947 208.956 L
865.74 182.286 L
889.532 182.87 L
913.325 194.356 L
937.117 201.558 L
960.91 190.657 L
984.702 171.19 L
1008.49 174.499 L
1032.29 181.508 L
1056.08 187.932 L
1079.87 161.457 L
1103.66 151.334 L
1127.46 169.633 L
1151.25 181.897 L
1175.04 149.582 L
1198.83 149.387 L
1222.63 171.579 L
1246.42 149.971 L
1270.21 171.579 L
1294 155.811 L
1317.8 157.953 L
1341.59 151.918 L
1365.38 172.358 LE
0.03 0.03 0.03 C
318.512 676.16 LS
342.305 676.16 L
366.098 676.16 L
389.89 676.16 L
413.682 676.16 L
437.475 676.16 L
461.267 676.16 L
485.06 676.16 L
508.852 676.16 L
532.645 676.16 L
556.438 676.16 L
580.23 676.16 L
604.022 676.16 L
627.815 676.16 L
651.607 676.16 L
675.4 676.16 L
699.192 676.16 L
722.985 676.16 L
746.777 676.16 L
770.57 676.16 L
794.362 676.16 L
818.155 676.16 L
841.947 676.16 L
865.74 676.16 L
889.532 676.16 L
913.325 676.16 L
937.117 676.16 L
960.91 676.16 L
984.702 676.16 L
1008.49 676.16 L
1032.29 676.16 L
1056.08 676.16 L
1079.87 676.16 L
1103.66 676.16 L
1127.46 604.328 L
1151.25 676.16 L
1175.04 349.701 L
1198.83 525.292 L
1222.63 600.24 L
1246.42 516.143 L
1270.21 403.235 L
1294 439.054 L
1317.8 605.301 L
1341.59 408.88 L
1365.38 445.478 LE
>>>>>>> 78b19c2afd9ae68c03200637849334dbaadbe970
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
